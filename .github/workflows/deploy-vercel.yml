name: üöÄ Deploy to Vercel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if Vercel secrets are available
    if: ${{ secrets.VERCEL_TOKEN != '' }}
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: üîß Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
        
    - name: üèóÔ∏è Build for production
      run: |
        echo "Building LearnSnap for Vercel deployment..."
        # Add any build commands here if needed
        
    - name: üöÄ Deploy to Vercel
      if: ${{ secrets.VERCEL_TOKEN != '' && secrets.ORG_ID != '' && secrets.PROJECT_ID != '' }}
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
        
    - name: üì¢ Deployment result
      run: |
        if [ "${{ secrets.VERCEL_TOKEN }}" = "" ]; then
          echo "‚ö†Ô∏è Vercel deployment skipped - missing VERCEL_TOKEN secret"
          echo "To deploy to Vercel:"
          echo "1. Add VERCEL_TOKEN to repository secrets"
          echo "2. Add ORG_ID to repository secrets"  
          echo "3. Add PROJECT_ID to repository secrets"
        else
          echo "üéâ LearnSnap deployed to Vercel successfully!"
        fi

  # Alternative: Deploy using Vercel CLI
  deploy-cli:
    runs-on: ubuntu-latest
    if: false  # Disabled by default, enable by setting to true
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} 